name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Verify tag is on main branch
        run: |
          TAG_BRANCH=$(git branch -r --contains ${{ github.ref }} | grep -E 'origin/main$' || true)
          if [ -z "$TAG_BRANCH" ]; then
            echo "Error: Tag must be created on main branch"
            echo "This tag exists on: $(git branch -r --contains ${{ github.ref }})"
            exit 1
          fi

      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v6
        with:
          go-version: '1.24'

      - name: Run tests
        run: go test -v ./tests/...

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
        if: env.GPG_PRIVATE_KEY != ''
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GOVERSION: ${{ steps.setup-go.outputs.go-version }}

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: spdx-json
          artifact-name: sbom.spdx.json

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            dist/checksums.txt
            sbom.spdx.json